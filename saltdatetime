import * as React from "react";
import {
  LocalizationProvider,
  DatePicker,
  DatePickerSingleInput,
  DatePickerSingleGridPanel,
} from "@salt-ds/lab";
import { AdapterMoment } from "@salt-ds/date-adapters";
import moment from "moment-timezone";

const DISPLAY_FMT = "DD MMM YYYY"; // matches your screenshot
const ISO_FMT = "YYYY-MM-DD";

// --- helpers (UTC, no TZ drift) ---
const toUTC = (iso: string | moment.Moment) =>
  typeof iso === "string" ? moment.tz(iso, ISO_FMT, "UTC") : iso.tz("UTC");

const latestClosedQuarterISO = () => {
  const today = moment.tz("UTC").startOf("day");
  const qEnd = today.clone().endOf("quarter").startOf("day");
  return today.isBefore(qEnd, "day")
    ? today.clone().subtract(1, "quarter").endOf("quarter").format(ISO_FMT)
    : qEnd.format(ISO_FMT);
};

const previousQuarterFromISO = (iso: string) =>
  toUTC(iso).clone().subtract(1, "quarter").endOf("quarter").format(ISO_FMT);

// --- component ---
export default function QuarterCobPickers({
  onChangeLatest,      // (iso: string) => void
  onChangePrevious,    // (iso: string) => void
  linkPreviousToLatest = false, // if true, second auto-tracks one quarter before first
}: {
  onChangeLatest?: (iso: string) => void;
  onChangePrevious?: (iso: string) => void;
  linkPreviousToLatest?: boolean;
}) {
  const latestISO = React.useMemo(() => latestClosedQuarterISO(), []);
  const prevISO = React.useMemo(() => previousQuarterFromISO(latestISO), [latestISO]);

  const [qLatestISO, setQLatestISO] = React.useState(latestISO);
  const [qPrevISO, setQPrevISO] = React.useState(prevISO);

  const qLatestMoment = toUTC(qLatestISO);
  const qPrevMoment = toUTC(qPrevISO);

  return (
    <LocalizationProvider dateAdapter={AdapterMoment}>
      <div style={{ display: "flex", gap: 24, alignItems: "center" }}>
        <label style={{ color: "var(--salt-text-primary)" }}>
          <span style={{ marginRight: 8, fontWeight: 600 }}>Current CoB:</span>
          <DatePicker
            selectionVariant="single"
            timezone="UTC"
            selectedDate={qLatestMoment}
            onSelectionChange={(m) => {
              const iso = m.tz("UTC").format(ISO_FMT); // <-- always YYYY-MM-DD
              setQLatestISO(iso);
              onChangeLatest?.(iso);
              if (linkPreviousToLatest) {
                const prev = previousQuarterFromISO(iso);
                setQPrevISO(prev);
                onChangePrevious?.(prev);
              }
            }}
          >
            <DatePickerSingleInput format={DISPLAY_FMT} />
            <DatePickerSingleGridPanel />
          </DatePicker>
        </label>

        <label style={{ color: "var(--salt-text-primary)" }}>
          <span style={{ marginRight: 8, fontWeight: 600 }}>Previous CoB:</span>
          <DatePicker
            selectionVariant="single"
            timezone="UTC"
            selectedDate={qPrevMoment}
            onSelectionChange={(m) => {
              const iso = m.tz("UTC").format(ISO_FMT);
              setQPrevISO(iso);
              onChangePrevious?.(iso);
            }}
          >
            <DatePickerSingleInput format={DISPLAY_FMT} />
            <DatePickerSingleGridPanel />
          </DatePicker>
        </label>
      </div>
    </LocalizationProvider>
  );
}
